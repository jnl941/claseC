#include <assert.h>
#include <stdio.h>
#include <stdlib.h>
#include "../include/TEST.h"
extern float leerRealIntervalo(float a, float b);

void PROBAR() {
    float result;

    // Caso de prueba 1: Entrada válida dentro del rango
    result = leerRealIntervalo(1.0, 5.0);
    assert(result >= 1.0 && result <= 5.0);

    // Caso de prueba 2: Entrada válida con límites invertidos
    result = leerRealIntervalo(5.0, 1.0);
    assert(result >= 1.0 && result <= 5.0);

    // Caso de prueba 3: Límites exactos
    result = leerRealIntervalo(3.0, 3.0);
    assert(result == 3.0);

    // Caso de prueba 4: Entrada por debajo del límite inferior
    result = leerRealIntervalo(2.0, 4.0);
    assert(result >= 2.0 && result <= 4.0);

    // Caso de prueba 5: Entrada por encima del límite superior
    result = leerRealIntervalo(4.0, 2.0);
    assert(result >= 2.0 && result <= 4.0);

    
    // Caso de prueba 1: Entrada válida dentro del rango
    result = leerRealIntervalo1(1.0, 5.0);
    assert(result >= 1.0 && result <= 5.0);

    // Caso de prueba 2: Entrada válida con límites invertidos
    result = leerRealIntervalo1(5.0, 1.0);
    assert(result >= 1.0 && result <= 5.0);

    // Caso de prueba 3: Límites exactos
    result = leerRealIntervalo1(3.0, 3.0);
    assert(result == 3.0);

    // Caso de prueba 4: Entrada por debajo del límite inferior
    result = leerRealIntervalo1(2.0, 4.0);
    assert(result >= 2.0 && result <= 4.0);

    // Caso de prueba 5: Entrada por encima del límite superior
    result = leerRealIntervalo1(4.0, 2.0);
    assert(result >= 2.0 && result <= 4.0);


    // Caso de prueba 1: Entrada válida dentro del rango
    result = leerRealIntervalo2(1.0, 5.0);
    assert(result >= 1.0 && result <= 5.0);

    // Caso de prueba 2: Entrada válida con límites invertidos
    result = leerRealIntervalo2(5.0, 1.0);
    assert(result >= 1.0 && result <= 5.0);

    // Caso de prueba 3: Límites exactos
    result = leerRealIntervalo2(3.0, 3.0);
    assert(result == 3.0);

    // Caso de prueba 4: Entrada por debajo del límite inferior
    result = leerRealIntervalo2(2.0, 4.0);
    assert(result >= 2.0 && result <= 4.0);

    // Caso de prueba 5: Entrada por encima del límite superior
    result = leerRealIntervalo2(4.0, 2.0);
    assert(result >= 2.0 && result <= 4.0);

    
    // Caso de prueba 1: Entrada válida dentro del rango
    result = leerRealIntervalo3(1.0, 5.0);
    assert(result >= 1.0 && result <= 5.0);

    // Caso de prueba 2: Entrada válida con límites invertidos
    result = leerRealIntervalo3(5.0, 1.0);
    assert(result >= 1.0 && result <= 5.0);

    // Caso de prueba 3: Límites exactos
    result = leerRealIntervalo3(3.0, 3.0);
    assert(result == 3.0);

    // Caso de prueba 4: Entrada por debajo del límite inferior
    result = leerRealIntervalo3(2.0, 4.0);
    assert(result >= 2.0 && result <= 4.0);

    // Caso de prueba 5: Entrada por encima del límite superior
    result = leerRealIntervalo3(4.0, 2.0);
    assert(result >= 2.0 && result <= 4.0);
